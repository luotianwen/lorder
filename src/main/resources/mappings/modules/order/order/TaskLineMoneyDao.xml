<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.order.dao.order.TaskLineMoneyDao">
    
	<sql id="taskLineMoneyColumns">
		a.userid AS "userid",
		a.name AS "name",
		a.id AS "id",
		a.line_id AS "lineId",
		a.usertype AS "usertype",
		a.typename AS "typename",
		a.amount AS "amount",
		a.proportion AS "proportion",
		a.rate AS "rate",
		a.accountNumber AS "accountNumber",
		a.bankName AS "bankName",

		a.shippertype AS "shippertype",
		a.shipperid AS "shipperid",
		a.shippername AS "shippername",
		a.isok AS "isok",
		b.task_no AS "od.taskNo",
		b.pool_task_no AS "od.poolTaskNo",
		b.name AS "od.name",
		b.product_no AS "od.productNo",
		b.priceSum AS "od.priceSum",
		b.payAmountSum AS "od.payAmountSum",
		b.batch_num AS "od.batchNum",

		c.task_gen_datetime AS "beginTaskGenDatetime"
	</sql>

	<sql id="taskLineMoneyJoins">

	</sql>
    
	<select id="get" resultType="TaskLineMoney">
		SELECT 
			<include refid="taskLineMoneyColumns"/>
		  FROM pool_task_line_money a , pool_task_line b
		, pool_task c
		where b.id = a.line_id and c.id = b.pool_task_id
		and a.id = #{id}
	</select>
	
	<select id="findList" resultType="TaskLineMoney">
		SELECT 
			<include refid="taskLineMoneyColumns"/>
		  FROM pool_task_line_money a , pool_task_line b
		, pool_task c


		<where>
			b.id = a.line_id and c.id = b.pool_task_id
			<if test="od != null and od.taskNo != null and od.taskNo != ''">
				AND b.task_no = #{od.taskNo}
			</if>
			<if test="od != null and od.batchNum != null and od.batchNum != ''">
				AND b.batch_num = #{od.batchNum}
			</if>
			<if test="bankName != null and bankName != ''">
				AND a.bankName = #{bankName}
			</if>
			<if test="accountNumber != null and accountNumber != ''">
				AND a.accountNumber = #{accountNumber}
			</if>
			<if test="userid != null and userid != ''">
				AND a.userid = #{userid}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE  concat('%',#{name},'%')
			</if>
			<if test="lineId != null and lineId != ''">
				AND a.line_id = #{lineId}
			</if>
			<if test="usertype != null and usertype != ''">
				AND a.usertype = #{usertype}
			</if>
			<if test="typename != null and typename != ''">
				AND a.typename = #{typename}
			</if>
			<if test="beginTaskGenDatetime != null and endTaskGenDatetime != null and beginTaskGenDatetime != '' and endTaskGenDatetime != ''">
				AND c.task_gen_datetime BETWEEN #{beginTaskGenDatetime} AND #{endTaskGenDatetime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TaskLineMoney">
		SELECT 
			<include refid="taskLineMoneyColumns"/>
		  FROM pool_task_line_money a , pool_task_line b
		, pool_task c
		where b.id = a.line_id and c.id = b.pool_task_id
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO pool_task_line_money(
			userid,
			name,
			id,
			line_id,
			usertype,
			typename,
			amount,
			proportion,
			rate,
			shippertype,
			shipperid,
			shippername,
			isok,
			accountNumber,
			bankName
		) VALUES (
			#{userid},
			#{name},
			#{id},
			#{lineId},
			#{usertype},
			#{typename},
			#{amount},
			#{proportion},
			#{rate},
			#{shippertype},
			#{shipperid},
			#{shippername},
			#{isok}
			#{accountNumber},
			#{bankName},
		)
	</insert>
	
	<update id="update">
		UPDATE pool_task_line_money SET 	
			userid = #{userid},
			name = #{name},
			line_id = #{lineId},
			usertype = #{usertype},
			typename = #{typename},
			amount = #{amount},
			proportion = #{proportion},
			rate = #{rate},
			shippertype = #{shippertype},
			shipperid = #{shipperid},
			shippername = #{shippername},
			isok = #{isok},
			accountNumber=#{accountNumber},
			bankName=#{bankName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM pool_task_line_money
		WHERE id = #{id}
	</update>
	
</mapper>